#include "State.h"
#include <fstream>
#include <iostream>
#include <sstream>
#include <memory>
#include <vector>
#include <map>

using namespace std;
using namespace state;

std::vector<int> map1 {
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                
            };

 std::vector<int> level_1
            {
                238,238,238,238,238,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,
                238,238,238,239,238,215,216,216,217,216,217,216,217,216,217,216,217,216,217,216,217,216,217,216,217,216,217,216,217,216,
                239,238,215,216,216,195,195,194,195,194,195,194,195,194,195,194,195,194,195,194,195,194,195,194,195,194,195,194,195,194,
                215,216,195,195,194,195,194,195,195,194,195,194,195,194,195,195,195,195,195,195,195,195,194,194,195,92,47,47,47,47,
                195,194,195,195,194,194,194,194,217,216,217,216,217,216,217,217,217,217,217,217,217,217,217,217,217,46,298,273,273,273,
                195,194,194,194,194,194,194,215,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,46,1,135,135,134,
                194,194,194,194,194,194,215,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,92,47,47,4,44,268,223,223,
                195,194,194,194,194,215,197,197,197,197,197,197,197,197,92,47,47,47,47,47,47,47,4,137,0,0,44,222,177,178,
                194,194,194,216,215,197,238,238,197,197,197,197,197,197,46,0,0,0,0,0,0,0,137,0,0,0,44,222,199,200,
                194,194,215,238,197,238,238,238,197,197,197,197,197,197,91,45,45,2,0,0,0,0,0,0,0,0,44,222,181,182,
                194,215,197,197,238,238,238,238,197,197,197,197,197,197,196,194,194,46,0,0,137,0,0,0,0,0,44,222,203,204,
                215,197,238,238,238,197,197,92,47,47,47,47,47,47,47,47,47,4,0,0,0,0,0,0,0,0,44,222,176,176,
                197,197,197,197,197,197,197,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,44,222,176,176,
                197,197,197,197,197,197,197,46,0,0,0,0,0,0,0,0,0,0,276,231,231,231,231,231,231,231,277,222,176,176,
                197,197,197,197,197,197,197,46,0,0,137,0,0,0,276,231,231,231,184,184,184,185,229,229,229,229,274,222,181,182,
                197,197,197,197,92,47,47,4,0,0,0,0,0,276,188,184,184,184,184,184,184,228,0,0,0,0,44,222,203,204,
                197,197,197,92,4,0,0,0,0,0,0,276,231,188,185,229,229,229,186,184,184,228,0,0,137,0,44,222,176,176,
                197,197,92,0,0,0,0,0,137,0,0,230,184,184,228,0,0,0,230,184,184,228,0,0,0,0,44,222,176,176,
                197,197,46,0,0,0,0,0,0,0,0,230,184,184,228,0,0,0,230,184,184,228,0,0,0,0,44,222,176,176,
                197,197,46,0,0,0,0,0,0,0,0,230,184,184,228,0,0,0,230,184,184,228,0,0,0,0,44,222,181,182,
                197,197,46,0,0,0,0,0,0,0,0,230,184,184,187,231,231,231,188,184,184,228,0,0,0,137,44,222,203,204,
                197,197,46,0,0,0,0,0,0,0,0,275,186,184,184,184,184,184,184,184,184,228,0,0,0,0,44,222,176,176,
                197,197,46,0,0,0,0,0,0,0,0,0,275,229,229,229,229,229,229,229,229,274,0,0,0,0,44,222,176,176,
                197,197,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,45,90,269,247,247,
                197,197,46,0,0,0,0,0,0,137,0,0,0,0,0,0,0,137,0,0,0,0,137,0,44,194,196,216,216,216,
                197,197,91,45,45,2,0,0,0,0,137,0,0,0,0,0,0,0,0,137,0,0,0,0,44,216,218,238,238,238,
                238,238,193,194,195,91,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,90,238,240,197,197,197,
                238,238,215,216,217,193,194,195,195,194,194,195,194,194,195,194,194,195,194,194,195,194,194,195,196,197,197,197,197,197,
                238,197,237,238,239,215,216,217,217,216,216,217,216,216,217,216,216,217,216,216,217,216,216,217,218,197,197,197,197,197,
                238,238,238,238,238,237,238,239,239,238,238,239,238,238,239,238,238,239,238,238,239,238,238,239,240,197,197,197,197,197
            };

            
            std::vector<int> level_2
            {
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,38,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,92,47,47,47,47,47,93,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,92,4,0,0,0,0,0,44,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,46,0,0,0,0,0,1,90,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,91,45,45,45,45,45,90,156,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,154,155,155,155,155,155,156,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,92,47,47,93,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,91,136,136,90,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,16,154,155,155,156,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,60,82,82,82,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,60,82,82,82,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,107,108,109,138,138,138,138,38,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,129,130,131,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,151,152,153,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,173,174,175,138,138,138,138,138,20,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,42,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,18,19,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,18,19,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,20,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,20,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,
                138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138
            };

State::State(std::string newMode)
{
    Cursor c{15, 15};
    this->cursor = c;
    this->mode=newMode;
    this->cMap=map1;
    this->First_Layer=level_1;
    this->Second_Layer=level_2;
}

std::vector<std::unique_ptr<Character>> &State::getCharacters()
{
    vector<unique_ptr<Character>> &charac = characters;
    return charac;
}

std::vector<int> State::getMap ()
{
    return cMap;
}


  Cursor &State::getCursor()
{
    Cursor &refCursor = cursor;
    return refCursor;
}


void State::initializeCharacters (){

	Spells Spell1;
    Spell1.SetSpell(PUNCH);
	std::unique_ptr<Character> Char1(new Character(BOWMAN, "bow", 15, 16,Spell1,1,302));
	characters.push_back(move(Char1));
    State::modifyMap(15*30+16,302);

	Spells Spell2;
    Spell2.SetSpell(IGNITE);
	std::unique_ptr<Character> Char2(new Character(PLAYER, "pla", 15, 14,Spell2,2,303));
	characters.push_back(move(Char2));
    State::modifyMap(15*30+14,303);

   	cout << "Characters created\n";
}

void State::modifyMap(int tile,int newTile)
{
    this->cMap[tile]=newTile;
}

int State::getCurrentTurn()
{
    return this->currentTurn;
}

int State::getEnd()
{
    return this->end;
}

void State::setCurrentTurn(int newTurn)
{
    this->currentTurn = newTurn;
}

void State::setTurnOwner(int newOwner)
{
    this->turnOwner = newOwner;
}

int State::getTurnOwner()
{
    return this->turnOwner;
}

void State::setEnd(bool res)
{
    this->end = res;
}

StateFightAction State::getFightAction () 
{
	return this->currentFightAction;
}

void State::setFightAction (StateFightAction newStateFightAction) 
{
	 this->currentFightAction=newStateFightAction;
}

void State::setWin(bool sbwon)
{
    this->win = sbwon;
}

std::string State::getMode(){
    return mode;
}
